git
生成公钥 ssh-keygen -C "1243878247@qq.com" -t rsa
git config --global user.name "lcxgit"
git config --global user.email "1243878247@qq.com"
mm 13232195379lcx
上传项目到Github，在本地项目目录下依次执行以下命令：
初始化 git init
提交上文件 git add README.md
添加注释 git commit -m "first commit" update
将本地的仓库关联到github上。后面的https链接换成刚刚自己在github上创建的仓库url地址
git remote add origin https://github.com/lcxgit/project.git
git remote add origin git@github.com:lcxgit/project.git
提交到远程仓库 git push -u origin master

修改文件提交
添加修改文件 git add README.md
添加注释  git commit -m "update"
把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。
执行此命令后会要求输入用户名、密码，验证通过后即开始上传。
git push -u origin master 

拉取远程的文件把本地的覆盖，再上传
git pull --rebase origin master

获取远程库与本地同步合并 
git pull origin master
git pull origin master --allow-unrelated-histories

本地强制上传到远程，把远程的覆盖
git push -f origin master
or
git push origin master -f
强制推送 git push -u -f origin master

查看本地git仓库状态 git status

查看分支状态 git branch –a
$ git --help # 帮助命令
$ git pull origin master  # 将远程仓库里面的项目拉下来
$ dir  # 查看有哪些文件夹
$ git rm -r --cached target # 删除target文件夹
$ git commit -m "删除了target"  # 提交,添加操作说明

443错误 git config --global --unset http.proxy

关于 “RPC failed; curl 18 transfer closed with outstanding read data remaining”错误
git config --global http.postBuffer 542428800

git init test && cd test     //新建仓库并进入文件夹
git config core.sparsecheckout true //设置允许克隆子目录
echo 'tt*' >> .git/info //设置要克隆的仓库的子目录路径   //空格别漏
git remote add origin git@github.com:mygithub/test.git  //这里换成你要克隆的项目和库
git pull origin master    //下载


echo "# test" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/lcxgit/test.git
git remote add origin git@github.com:lcxgit/test.git
git push -u origin master

克隆
git clone git@github.com:lcxgit/project.git
git clone git@github.com:lcxgit/test.git

git add bak
git commit -m "update bak"
git push -u origin master

git rm -r --cached bak
git commit -m "删除 bak"
git push -u origin master



